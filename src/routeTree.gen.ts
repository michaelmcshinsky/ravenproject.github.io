/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const LangIndexLazyImport = createFileRoute('/$lang/')()
const LangAboutLazyImport = createFileRoute('/$lang/about')()

// Create/Update Routes

const LangIndexLazyRoute = LangIndexLazyImport.update({
  id: '/$lang/',
  path: '/$lang/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/$lang/index.lazy').then((d) => d.Route))

const LangAboutLazyRoute = LangAboutLazyImport.update({
  id: '/$lang/about',
  path: '/$lang/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/$lang/about.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/$lang/about': {
      id: '/$lang/about'
      path: '/$lang/about'
      fullPath: '/$lang/about'
      preLoaderRoute: typeof LangAboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/$lang/': {
      id: '/$lang/'
      path: '/$lang'
      fullPath: '/$lang'
      preLoaderRoute: typeof LangIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/$lang/about': typeof LangAboutLazyRoute
  '/$lang': typeof LangIndexLazyRoute
}

export interface FileRoutesByTo {
  '/$lang/about': typeof LangAboutLazyRoute
  '/$lang': typeof LangIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/$lang/about': typeof LangAboutLazyRoute
  '/$lang/': typeof LangIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/$lang/about' | '/$lang'
  fileRoutesByTo: FileRoutesByTo
  to: '/$lang/about' | '/$lang'
  id: '__root__' | '/$lang/about' | '/$lang/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  LangAboutLazyRoute: typeof LangAboutLazyRoute
  LangIndexLazyRoute: typeof LangIndexLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  LangAboutLazyRoute: LangAboutLazyRoute,
  LangIndexLazyRoute: LangIndexLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/$lang/about",
        "/$lang/"
      ]
    },
    "/$lang/about": {
      "filePath": "$lang/about.lazy.tsx"
    },
    "/$lang/": {
      "filePath": "$lang/index.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
